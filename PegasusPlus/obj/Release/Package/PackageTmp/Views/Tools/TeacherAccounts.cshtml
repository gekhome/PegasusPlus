@using PegasusPlus.Models

@{
    ViewBag.Title = "TeacherAccounts";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="page-header" style="margin:5px 30px 5px 50px">
    <span style="margin:5px 60px 5px 60px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #696969">
        <font style="color:#292929;float:left;font-family:'Segoe UI'">Λογαριασμοί εκπαιδευτικών</font>
    </span>
    <span style="margin:5px 10px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Admin", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
    <button class="btn btn-info" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
</div>

<div class="body-content mt-4" style="margin:10px 30px 5px 30px">
    @(Html.Kendo().Grid<UserTeacherViewModel>()
        .Name("Master")
        .Columns(columns =>
        {
            columns.Bound(c => c.Username).Width(40);
            columns.Bound(c => c.Password).Width(30);
            columns.Bound(c => c.UserAfm).Width(30);
            columns.Bound(c => c.CreateDate).Width(35).Format("{0:dd/MM/yyyy}");
        })
        .ToolBar(toolBar =>
        {
            toolBar.Pdf();
            toolBar.Excel();
        })
        .HtmlAttributes(new { style = "font-size:16px" })
        .Filterable()
        .Selectable()
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Scrollable(scr => scr.Height(320))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(10))
        .DataSource(datasource => datasource
            .Ajax()
            .PageSize(60)
            .ServerOperation(true)
            .Model(model => model.Id(p => p.UserID))
            .Read(read => read.Action("UserTeacher_Read", "Tools"))
        )
        .Events(events => events.Change("change"))
    )
</div>

<div class="body-content" style="margin:10px 30px 5px 30px">
    @(Html.Kendo().Grid<TeacherAccountInfoViewModel>()
        .Name("Child")
        .Columns(columns =>
        {
            columns.Bound(m => m.FullName).Width(40);
            columns.Bound(m => m.FatherName).Width(30);
            columns.Bound(m => m.ADT).Width(20);
            columns.Bound(m => m.Telephone).Width(20);
            columns.Bound(m => m.CellPhone).Width(20);
            columns.Bound(m => m.Email).Width(30);
        })
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Scrollable(scr => scr.Height(80))
        .HtmlAttributes(new { style = "font-size:16px" })
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .DataSource(datasource => datasource
        .Ajax()
        .PageSize(20)
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.UserID);
        })
        .Read(read => read.Action("UserTeacherInfo_Read", "Tools").Data("data"))
    ) @* datasource*@
    )
</div>

<script type="text/javascript">

    function RefreshGrid(e) {
        var grid = $("#Master").data("kendoGrid");
        grid.dataSource.read();
    }

    function data() {
        var masterGrid = $("#Master").data("kendoGrid");
        // get data item for selected row
        var dataItem = masterGrid.dataItem(masterGrid.select());
        if (dataItem) {
            return { afm: dataItem.UserAfm };
        }
        else {
            return { afm: "" };
        }
    }

    function change(e) {
        var dataItem = this.dataItem(this.select());
        var user_afm = dataItem.UserAfm;

        $("#Child").data("kendoGrid").dataSource.read({ afm: user_afm });
        $("#Child").css("display", "block");
    }

</script>
