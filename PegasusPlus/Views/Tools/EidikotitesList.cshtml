@using PegasusPlus.DAL
@using PegasusPlus.Models

@{
    ViewBag.Title = "Ειδικότητες (Νέες)";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="page-header" style="margin:5px 20px 5px 20px">
    <span style="margin:5px 20px 5px 20px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #696969">
        <font style="color:#292929;float:left;font-family:'Segoe UI'">Κωδικολόγιο ειδικοτήτων εκπαιδευτικών</font>
    </span>
    <span style="margin:5px 10px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Admin", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
    <button class="btn btn-info" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
    <span style="margin:5px 5px 5px 10px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Εκτύπωση", "EidikotitesPrint", "Tools", null, new { @class = "btn btn-primary", style = "font-size:14px", target = "_blank" })</span>
</div>

<div class="body-content mt-4" style="margin:10px 20px 5px 20px">
    @(Html.Kendo().Grid<EidikotitesViewModel>()
        .Name("Grid")
        .Columns(columns =>
        {
            columns.Bound(m => m.EidikotitaCode).Width(10).Filterable(false);
            columns.Bound(m => m.EidikotitaName).Groupable(false).Width(50);
            columns.Bound(m => m.EidikotitaUnified).Width(45);
            columns.ForeignKey(f => f.KladosUnified, (IEnumerable<SysKladosEniaios>)ViewData["kladoiUnified"], "KladosEniaiosID", "KladosEniaiosText").Width(40);
            columns.ForeignKey(f => f.EidikotitaKladosID, (IEnumerable<SysKlados>)ViewData["kladoi"], "KladosID", "KladosName").Width(12);
            columns.Command(command => command.Destroy()).Width(15);
        })
        .ToolBar(toolBar =>
        {
            toolBar.Create();
            toolBar.Save();
        })
        .HtmlAttributes(new { style = "font-size:14px" })
        .Filterable()
        .Groupable()
        .Navigatable()
        .Editable(editable => editable.Mode(GridEditMode.InCell).CreateAt(GridInsertRowPosition.Top))
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Scrollable(scr => scr.Height(450))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .DataSource(datasource => datasource
        .Ajax()
        .Batch(true)
        .PageSize(60)
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.EidikotitaID);
            model.Field(p => p.EidikotitaKladosID).DefaultValue(1);
            model.Field(p => p.KladosUnified).DefaultValue(ViewData["defaultKladosUnified"]);
        })
        .Create(create => create.Action("Eidikotita_Create", "Tools"))
        .Read(read => read.Action("Eidikotita_Read", "Tools"))
        .Update(update => update.Action("Eidikotita_Update", "Tools"))
        .Destroy(destroy => destroy.Action("Eidikotita_Destroy", "Tools"))
        .Events(events => events.Error("error_handler"))
        ) @* datasource*@
    )
</div>

<script type="text/javascript">

    function RefreshGrid(e) {
        var grid = $("#Grid").data("kendoGrid");
        grid.dataSource.read();
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
            $("#Grid").data("kendoGrid").dataSource.read();
        }
    }

</script>
