@using PegasusPlus.Models

@{
    ViewBag.Title = "Περιφέρειες και Νομοί";
    Layout = "~/Views/Shared/_SchoolLayout.cshtml";
}

<div class="page-header" style="margin:5px 30px 5px 30px">
    <span style="margin:5px 30px 5px 30px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #696969">
        <font style="color:#292929;float:left;font-family:'Segoe UI'">Περιφέρειες και Νομοί</font>
    </span>
    <span style="margin:5px 10px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "School", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
    <button class="btn btn-info" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGridMaster()">Ανανέωση</button>
</div>

<div class="body-content mt-4" style="margin:10px 30px 5px 30px">
    @(Html.Kendo().Grid<PeriferiaMajorViewModel>()
    .Name("Master")
    .Columns(columns =>
    {
        columns.Bound(m => m.PeriferiaMajor).Width(120);
    })
    .HtmlAttributes(new { style = "font-size:16px" })
    .Filterable()
    .Selectable()
    .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
    .Scrollable(scr => scr.Height(280))
    .Pageable(pageable => pageable
    .Refresh(true)
    .PageSizes(true)
    .ButtonCount(5))
    .DataSource(datasource => datasource
    .Ajax()
    .PageSize(40)
    .ServerOperation(false)
    .Model(model =>
    {
        model.Id(p => p.PeriferiaMajorID);
    })
    .Read(read => read.Action("PeriferiaMajor_Read", "Settings"))
    .Events(events => events.Error("error_handler1"))
    )
    .Events(e => e.Change("change"))
    )
</div>

<div class="body-content" style="margin:10px 30px 5px 30px">
    @(Html.Kendo().Grid<NomosViewModel>()
        .Name("Child")
        .Columns(columns =>
        {
            columns.Bound(m => m.NomosText).Width(120);
        })
        .Filterable()
        .HtmlAttributes(new { style = "display: block;font-size:16px" })
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Scrollable(scr => scr.Height(300))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .DataSource(datasource => datasource
        .Ajax()
        .PageSize(20)
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.NomosID);
        })
        .Read(read => read.Action("Nomos_Read", "Settings").Data("data"))
        .Events(events => events.Error("error_handler2"))
    ) @* datasource*@
    )
</div>

<script type="text/javascript">

    function change(e) {
        var masterGrid = $("#Master").data("kendoGrid");
        var dataItem = masterGrid.dataItem(masterGrid.select());
        var periferiaID = 0;
        if (dataItem) {
            periferiaID = dataItem.PeriferiaMajorID;
        }
        //alert("Group ID : " + groupID);
        $("#Child").data("kendoGrid").dataSource.read({ periferiaId: periferiaID });
        $("#Child").css("display", "block");
    }

    function data() {
        var masterGrid = $("#Master").data("kendoGrid");
        var dataItem = masterGrid.dataItem(masterGrid.select());
        if (dataItem) {
            return { periferiaId: dataItem.PeriferiaMajorID };
        }
        else {
            return { periferiaId: 0 };
        }
    }

    function RefreshGridMaster(e) {
        var grid = $("#Master").data("kendoGrid");
        grid.dataSource.read();
    }

    function RefreshGridChild(e) {
        var grid = $("#Child").data("kendoGrid");
        grid.dataSource.read();
    }

    function error_handler1(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
            RefreshGridMaster(e);
        }
    }

    function error_handler2(e) {
        if (e.errors) {
            var message = "Σφάλμα:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
            RefreshGridChild(e);
        }
    }

</script>