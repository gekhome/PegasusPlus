@using PegasusPlus.Models
@using PegasusPlus.DAL

@{
    ViewBag.Title = "Διαχείριση αιτήσεων";
    Layout = "~/Views/Shared/_TeacherLayout.cshtml";
}

<div class="page-header">
    <div style="margin:5px 60px 5px 40px">
        <span style="font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #696969">
            <font style="color:#292929;">Διαχείριση αιτήσεων και επιλογή σχολικών μονάδων</font>
        </span>
        <span style="margin:0px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:16px">
            @Html.ActionLink("Επιστροφή", "Index", "Teachers", null, new { @class = "btn btn-warning", style = "font-size:16px" })
        </span>
    </div>
</div>

<div class="body-content mt-3 mb-3 ml-4 mr-4" id="candidate">
    <div class="row">
        <div class="col-md-3">
            ΑΦΜ : <label class="form-control d-inline" style="min-height:34px;min-width:400px; background-color:#EEE" title="@Html.Raw(ViewBag.loggedTeacher.AFM)">
                @Html.Raw(ViewBag.loggedTeacher.AFM)
            </label>
        </div>
        <div class="col-md-3">
            <label class="form-control smartShortText d-inline" style="min-height:34px;width:300px; background-color:#EEE" title="@Html.Raw(ViewBag.loggedTeacher.FirstName) @Html.Raw(ViewBag.loggedTeacher.LastName)">
                @Html.Raw(ViewBag.loggedTeacher.FirstName) @Html.Raw(ViewBag.loggedTeacher.LastName)
            </label>
        </div>
    </div>
</div>

<div class="body-content" style="margin:5px 30px 5px 30px">
    @(Html.Kendo().Grid<AitisisGridViewModel>()
        .Name("AitisisGrid")
        .Columns(columns =>
        {
            columns.Bound(x => x.AitisisProtocol).Width(30);
            columns.ForeignKey(x => x.Eidikotita, (IEnumerable<EidikotitesViewModel>)ViewData["eidikotites"], "EidikotitaID", "EidikotitaDesc").Width(50);
            columns.ForeignKey(x => x.School, (IEnumerable<SchoolsViewModel>)ViewData["schools"], "SchoolID", "SchoolName").Width(30);
            columns.ForeignKey(x => x.Periferia, (IEnumerable<PeriferiesViewModel>)ViewData["periferies"], "PeriferiaID", "PeriferiaName").Width(50);
            columns.Command(command => { command.Destroy(); }).Width(20);
            columns.Template(@<text></text>)
            .ClientTemplate(
            "<a class=\"k-button k-button-icontext\" href='" + Url.Action("AitisiEdit2", "Aitisis") + "?aitisiId=#=AitisisID#'><span class=\"k-icon k-edit\"></span>Επεξεργασία</a>"
            ).Width(25);
        })
        .Filterable()
        .Selectable()
        .Scrollable(scr => scr.Height(220))
        .HtmlAttributes(new { style = "display: block;font-size:14px" })
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(3))
        .DataSource(datasource => datasource
        .Ajax()
        .PageSize(20)
        .ServerOperation(false)
        .Events(events => { events.Error("error_handler1"); })
        .Model(model =>
        {
            model.Id(p => p.AitisisID);
        })
        .Read("Aitisis_Read", "Aitisis")
        .Destroy("Aitisis_Destroy", "Aitisis")
        )
        .Events(events => events.Change("change"))
    )
</div>

<div class="body-content" style="margin:5px 30px 5px 30px">
    <font style="color:#292929;font-family:'Segoe UI';font-size:16px;font-weight:bold">Επιλογή σχολικών μονάδων αίτησης </font>
    <font style="color:#292929;font-family:'Segoe UI';font-size:14px;font-style:italic">(πρέπει <u>πρώτα να επιλέξετε αίτηση</u> με κλικ επάνω στην επιθυμητή αίτηση)</font>
</div>

<div class="body-content" style="margin:5px 20px 5px 20px">
    @(Html.Kendo().Grid<AitisiSchoolsViewModel>()
        .Name("SchoolsGrid")
        .Columns(columns =>
        {
            columns.ForeignKey(x => x.SchoolID, (IEnumerable<SchoolsViewModel>)ViewData["schools"], "SchoolID", "SchoolName").Width(60).EditorTemplateName("AitisiSchoolSelector");
            columns.Command(command => { command.Edit(); command.Destroy(); }).Width(40);
        })
        .ToolBar(toolBar =>
        {
            toolBar.Create();
        })
        .Filterable()
        .AutoBind(false)
        .Navigatable()
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .Scrollable(scr => scr.Height(200))
        .HtmlAttributes(new { style = "display: block;" })
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(3))
        .DataSource(datasource => datasource
        .Ajax()
        .Batch(false)
        .PageSize(20)
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.RowID);
            model.Field(p => p.SchoolID).DefaultValue((int)ViewData["defaultSchool"]);
        })
        .Read(read => read.Action("Schools_Read", "Aitisis").Data("data"))
        .Create(create => create.Action("Schools_Create", "Aitisis").Data("data"))
        .Update(update => update.Action("Schools_Update", "Aitisis").Data("data"))
        .Destroy(destroy => destroy.Action("Schools_Destroy", "Aitisis"))
        .Events(events => events.Error("error_handler2"))
        )
    )

</div>



<script type="text/javascript">

    function filterSchools() {
        var masterGrid = $("#AitisisGrid").data("kendoGrid");
        // get data item for selected row
        var dataItem = masterGrid.dataItem(masterGrid.select());
        if (dataItem) {
            return { aitisiID: dataItem.AitisisID };
        }
        else {
            return { aitisiID: 0 };
        }
    }

    function data() {
        var masterGrid = $("#AitisisGrid").data("kendoGrid");
        // get data item for selected row
        var dataItem = masterGrid.dataItem(masterGrid.select());
        if (dataItem) {
            return { aitisiID: dataItem.AitisisID };
        }
        else {
            return { aitisiID: 0 };
        }
    }

    function change(e) {
        var dataItem = this.dataItem(this.select());
        var aitisiId = dataItem.AitisisID;

        $("#SchoolsGrid").data("kendoGrid").dataSource.read({ aitisiID: aitisiId });
    }

    function error_handler1(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
            $("#AitisisGrid").data("kendoGrid").dataSource.read();
        }
    }

    function error_handler2(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
            $("#SchoolsGrid").data("kendoGrid").dataSource.read();
        }
    }

    function RefreshGrid(e) {
        var grid = $("#AitisisGrid").data("kendoGrid");
        grid.dataSource.read();
    }

    function RefreshSchools(e) {
        var grid = $("#SchoolsGrid").data("kendoGrid");
        grid.dataSource.read();

    }
</script>
