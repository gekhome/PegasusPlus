@using PegasusPlus.Models

@{
    ViewBag.Title = "AdminList";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="page-header" style="margin:5px 60px 5px 80px">
    <span style="margin:5px 60px 5px 60px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #696969">
        <font style="color:#292929;float:left;font-family:'Segoe UI'">Λογαριασμοί Διαχειριστών</font>
    </span>
    <span style="margin:0px 15px 5px 5px;float:right;font-family:'Segoe UI';">@Html.ActionLink("Επιστροφή", "Index", "Admin", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
    <button class="btn btn-info" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
</div>

<p></p>
<div class="body-content mt-4" style="margin:5px 60px 5px 60px">
    @(Html.Kendo().Grid<UserAdminViewModel>()
        .Name("Grid")
        .Columns(columns =>
        {
            columns.Bound(c => c.Username).Groupable(false).Width(40);
            columns.Bound(c => c.Password).Groupable(false).Width(30);
            columns.Bound(c => c.FullName).Groupable(false).Width(60);
            columns.Bound(c => c.CreateDate).Groupable(false).Width(30).Format("{0:dd/MM/yyyy}");
            columns.Command(command => command.Destroy().Text("Διαγραφή")).Width(32);
        })
        .ToolBar(toolBar =>
        {
            toolBar.Create();
            toolBar.Save();
            toolBar.Pdf();
            toolBar.Excel();
        })
        .HtmlAttributes(new { style = "font-size:16px" })
        .Editable(editable => editable.Mode(GridEditMode.InCell))
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Filterable()
        .Navigatable()
        .Scrollable(scr => scr.Height(380))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .DataSource(datasource => datasource
            .Ajax()
            .Batch(true)
            .PageSize(20)
            .ServerOperation(false)
            .Model(model => model.Id(p => p.UserID))
            .Create(create => create.Action("Admin_Create", "UserAdmins"))
            .Read(read => read.Action("Admin_Read", "UserAdmins"))
            .Update(update => update.Action("Admin_Update", "UserAdmins"))
            .Destroy(destroy => destroy.Action("Admin_Destroy", "UserAdmins"))
            .Events(events => events.Error("error_handler"))
        )
    )
</div>

<script type="text/javascript">

    function RefreshGrid(e) {
        var grid = $("#Grid").data("kendoGrid");
        grid.dataSource.read();
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
            $("#Grid").data("kendoGrid").dataSource.read();
        }
    }

</script>
